##----------------------------------------------------------------------------
## S100GenerateNetConfig
## 
## Author: Dave Billin
## 
## Description:
##   This script gets run when the OS enters the default run level
##   (i.e. at boot time).  It reads the ID of the AUV from the file
##   containing vehicle-specific configuration data, and uses this
##   to generate a corresponding network configuration in the
##   /etc/network/interfaces file used to bring up the ethernet and
##   WiFi interfaces.
##
##----------------------------------------------------------------------------

#==========================================
# Some variables for stdio formatting
#==========================================
txtrst=$(tput sgr0)     # Reset colors and formatting to defaults
txtyel=$(tput setaf 3)  # Start Yellow text


##----------------
## VARIABLES
##----------------
# This line establishes executable paths during boot
PATH="/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin"

# SRCFILE must be set to an absolute path to a file containing 
# vehicle-specific data for the AUV
SRCFILE="/usr/share/VehicleConfig.cfg"

# Absolute path of the network interfaces file to be generated by 
# this script (typically "/etc/network/interfaces")
DESTFILE=/etc/network/interfaces


##-----------------
## END VARIABLES
##-----------------

SUBID=-1
# Read the vehicle ID from vehicle-specific data
if [ -f ${SRCFILE} ]
then
   SUBID="$(gawk -F= '(/AUV_VEHICLE_ID/){print int($2)}' ${SRCFILE})"
fi


# Catch null Vehicle ID
if [ -z ${SUBID} ] 
then
   SUBID=-1
fi


# If the vehicle ID could not be read, default to an ID of 50 and print 
# a warning
#echo SUBID = ${SUBID}
if [ 1 -gt ${SUBID} ]
then
   echo WARNING: Failed to load a vehicle ID from ${SRCFILE}"!"
   echo Defaulting to vehicle ID 50.
   SUBID=50
fi

printf "${txtyel}Generating network configuration for AUV %d\n${txtrst}" \
       "${SUBID}"

# Create configuration data for the loopback and ethernet (eth0)
# network interfaces

echo "# Configuration generated from /etc/init.d/Yelsub_GenerateNetConfig" > ${DESTFILE}
echo >> ${DESTFILE}

##------------------------------------------
## Generate loopback interface configuration
##------------------------------------------
echo "# Loopback interface" >> ${DESTFILE}
echo auto lo >> ${DESTFILE}
echo iface lo inet loopback >> ${DESTFILE}
echo >> ${DESTFILE}
echo >> ${DESTFILE}


##------------------------------------------
## Generate wired interface configuration
##------------------------------------------
echo "# Ethernet interface" >> ${DESTFILE}
echo auto eth0 >> ${DESTFILE}
echo iface eth0 inet static >> ${DESTFILE}
echo "        address 192.168.1.1" >> ${DESTFILE}
echo "        netmask 255.255.255.0" >> ${DESTFILE}
echo "        network 192.168.1.0" >> ${DESTFILE}
echo "        /sbin/ifconfig eth0 up" >> ${DESTFILE}
echo "        post-up echo Ethernet interface eth0 is UP" >> ${DESTFILE}
echo "        post-down echo Ethernet interface eth0 is DOWN" >> ${DESTFILE}
echo >> ${DESTFILE}
echo >> ${DESTFILE}

##------------------------------------------
## Generate WiFi interface configuration
##------------------------------------------
echo "# Wireless interface" >> ${DESTFILE}
echo auto wlan0 >> ${DESTFILE}
echo iface wlan0 inet static >> ${DESTFILE}
echo "        wireless-mode Ad-hoc" >> ${DESTFILE}
echo "        wireless-essid YellowSub" >> ${DESTFILE}
echo "        address 192.168.2."${SUBID} >> ${DESTFILE}
echo "        network 192.168.2.0" >> ${DESTFILE}
echo "        netmask 255.255.255.0" >> ${DESTFILE}
echo "#        gateway 192.168.2.254" >> ${DESTFILE}
echo "        /sbin/ifconfig wlan0 up" >> ${DESTFILE}
echo "        post-up echo WiFi interface wlan0 is UP" >> ${DESTFILE}
echo "        post-down echo Wifi interface wlan0 is DOWN" >> ${DESTFILE}


